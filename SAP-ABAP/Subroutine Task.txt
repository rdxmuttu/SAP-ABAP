*&---------------------------------------------------------------------*
*& Report ZEBIN_SUBROUTINE_TASK
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZEBIN_SUBROUTINE_TASK.

*TYPES : BEGIN OF ty_range,
*  sign type c length 1,
*  opti type c length 2,
*  low type vbeln,
*  high type vbeln,
*  END OF ty_range.
*  TYPES: BEGIN OF ty_header,
*         vbeln TYPE vbak-vbeln,
*         audat TYPE vbak-audat,
*         netwr TYPE vbak-netwr,
*         kunnr TYPE vbak-kunnr,
*         name1 TYPE kna1-name1,
*       END OF ty_header.
*TYPES: BEGIN  OF ty_vbap,
*  vbeln type vbap-vbeln,
*  posnr TYPE vbap-posnr,
*  pstyv TYPE vbap-pstyv,
*  arktx TYPE vbap-arktx,
*  kwmeng TYPE vbap-kwmeng,
*  zieme TYPE vbap-zieme,
*  netwr TYPE vbap-netwr,
*  END  OF ty_vbap.
*  TYPES :BEGIN OF ty_vbak,
*       vbeln TYPE vbak-vbeln,
*       audat TYPE vbak-audat,
*       netwr TYPE vbak-netwr,
*       kunnr type vbak-kunnr,
*END OF ty_vbak.
*TYPES : BEGIN OF ty_t006a,
*       msehi type t006a-msehi,
*       msehl type t006a-msehl,
*
*  END OF ty_t006a.
*  TYPES : BEGIN OF ty_kna1 ,
*    kunnr type kna1-kunnr,
*    name1 type kna1-name1,
*    END OF ty_kna1.
*  DATA :
*        it_vbak TYPE table of ty_vbak,
*        wa_vbak LIKE LINE OF it_vbak,
*it_vbap TYPE table of ty_vbap,
*wa_vbap LIKE LINE OF it_vbap,
*        it_t006a TYPE TABLE OF ty_t006a,
*        wa_t006a like line of it_t006a,
*
*        it_kna1 TYPE TABLE OF ty_kna1,
*        wa_kna1 LIKE LINE OF it_kna1.
*
*TYPES : ty_it_range TYPE STANDARD TABLE OF ty_range.
*TYPES : ty_it_header TYPE STANDARD TABLE OF ty_header.
*TYPES: BEGIN OF ty_item,
*         vbeln type vbap-vbeln,
*  posnr TYPE vbap-posnr,
*  pstyv TYPE vbap-pstyv,
*  arktx TYPE vbap-arktx,
*  kwmeng TYPE vbap-kwmeng,
*  msehl TYPE t006a-msehl,
*  netwr TYPE vbap-netwr,
*       END OF ty_item.
*       TYPES : ty_it_item TYPE STANDARD TABLE OF ty_item.
*
*
*TYPES : ty_it_vbak TYPE STANDARD TABLE OF ty_vbak,
*ty_it_kna1 TYPE STANDARD TABLE OF ty_kna1,
*ty_it_vbap TYPE STANDARD TABLE OF ty_vbap,
*ty_it_t006a TYPE STANDARD TABLE OF ty_t006a.
**ty_s_num TYPE STANDARD TABLE OF vbak-vbeln.
**
**SELECT-OPTIONS s_num FOR wa_vbak-vbeln.
**&---------------------------------------------------------------------*
**& Form header
**&---------------------------------------------------------------------*
**& text
**&---------------------------------------------------------------------*
**&      --> S_NUM
**&      <-- IT_VBAK
**&      <-- IT_KNA1
**&---------------------------------------------------------------------*
*FORM header  USING    p_s_num TYPE ty_it_range
*             CHANGING p_it_header TYPE ty_it_header.
*
**DATA : wa_item LIKE LINE OF p_it_item,
*     DATA : wa_header LIKE LINE OF p_it_header.
**  SELECT vbeln audat netwr kunnr  FROM vbak  INTO TABLE p_it_header WHERE vbeln IN p_s_num.
**  SELECT vbak~vbeln vbak~audat vbak~netwr  kna1~name1 FROM vbak INNER JOIN kna1 ON vbak~kunnr = kna1~kunnr
**    INTO CORRESPONDING FIELDS OF TABLE p_it_header WHERE vbak~vbeln IN p_s_num.
*SELECT  vbeln audat netwr kunnr FROM vbak INTO TABLE it_vbak WHERE vbeln IN p_s_num.
*SELECT kunnr name1 FROM kna1 INTO TABLE it_kna1 FOR ALL ENTRIES IN it_vbak WHERE kunnr EQ it_vbak-kunnr.
*  LOOP AT it_vbak INTO wa_vbak.
* READ TABLE it_kna1 INTO wa_kna1 WITH KEY kunnr = wa_vbak-kunnr.
* wa_header-vbeln = wa_vbak-vbeln.
*  wa_header-audat = wa_vbak-audat.
*  wa_header-netwr = wa_vbak-netwr.
*  wa_header-name1 = wa_kna1-name1.
*  APPEND wa_header TO p_it_header.
*  ENDLOOP.
*
*ENDFORM.
**&---------------------------------------------------------------------*
**& Form items
**&---------------------------------------------------------------------*
**& text
**&---------------------------------------------------------------------*
**&      --> V_VBELN
**&      <-- IT_VBAP
**&      <-- IT_T006A
**&---------------------------------------------------------------------*
*FORM items  USING    p_v_vbeln TYPE vbap-vbeln
*            CHANGING p_it_item TYPE ty_it_item.
*  DATA : fnam(20),fval(50).
*DATA v_vbeln TYPE vbap-vbeln.
*GET CURSOR FIELD fnam VALUE fval.
*fnam = wa_vbak-vbeln.
*CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*  EXPORTING
*    input        = fval
* IMPORTING
*   OUTPUT        = v_vbeln.
*DATA : wa_item LIKE LINE OF p_it_item.
* SELECT  vbeln posnr pstyv arktx kwmeng zieme netwr FROM vbap INTO TABLE it_vbap WHERE vbeln EQ v_vbeln.
*SELECT msehi msehl  FROM t006a INTO TABLE it_t006a FOR ALL ENTRIES IN it_vbap where  msehi EQ it_vbap-zieme AND spras Eq 'E'.
*LOOP AT it_vbap into wa_vbap.
*  READ TABLE it_t006a INTO wa_t006a WITH KEY msehi = wa_vbap-zieme .
*  MOVE-CORRESPONDING wa_vbap TO wa_item.
*  MOVE-CORRESPONDING wa_t006a TO wa_item.
**  wa_item-posnr = wa_vbap-posnr.
**  wa_item-pstyv = wa_vbap-pstyv.
**  wa_item-arktx = wa_vbap-arktx.
**  wa_item-kwmeng = wa_vbap-kwmeng.
**  wa_item-msehl = wa_t006a-msehl.
**  wa_item-netwr = wa_vbap-netwr.
*  APPEND wa_item TO p_it_item.
*  ENDLOOP.
*
*ENDFORM.

*=================using global

DATA :it_header TYPE zebin_t_header,
      wa_header LIKE LINE OF it_header,
      it_item   TYPE zebin_t_item,
      wa_item   LIKE LINE OF it_item.



SELECT-OPTIONS s_num FOR wa_header-vbeln.

START-OF-SELECTION.

  PERFORM display IN PROGRAM zebin_list_task USING s_num[] CHANGING it_header.
  PERFORM display_header.

END-OF-SELECTION.

AT LINE-SELECTION.
  DATA : fnam(20),fval(50).
  DATA v_vbeln TYPE vbap-vbeln.
  GET CURSOR FIELD fnam VALUE fval.

  PERFORM conversion.

  CLEAR it_item.

  PERFORM itemdetails IN PROGRAM zebin_list_task USING v_vbeln CHANGING it_item.
  PERFORM display_item.


*&---------------------------------------------------------------------*
*& Form display_header
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_header .
  WRITE :/20 'Document Number',
      40 'Doc Date',
      70 'Net Val',
      90 'Sold To Party'.

  LOOP AT it_header INTO wa_header.
    WRITE : /20 wa_header-vbeln,
              40 wa_header-audat,
             70 wa_header-netwr LEFT-JUSTIFIED,
              90 wa_header-name1.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_item
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_item .
  LOOP AT it_item INTO wa_item.
    AT FIRST.
      WRITE :/ 'Item',
           20 'Material',
           35 'ItemDesc',
    60 'Order Qty' ,
     80 'UoM',
     100'NetVal'.
    ENDAT.
    WRITE : / wa_item-posnr,
             20 wa_item-pstyv,
             35  wa_item-arktx,
             50 wa_item-kwmeng,
             80 wa_item-msehi,
             90 wa_item-netwr.
    AT END OF vbeln.
      SUM.
      WRITE : /50 wa_ITEM-kwmeng,
           90 wa_ITEM-netwr.
    ENDAT.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form conversion
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM conversion .

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = fval
    IMPORTING
      output = v_vbeln.
ENDFORM.