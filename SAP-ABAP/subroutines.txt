*&---------------------------------------------------------------------*
*& Report ZEBIN_SUBROUTINES
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zebin_subroutines.
*PERFORM display.
*FORM display.
*  WRITE 'Subroutine called'.
*ENDFORM.
TYPES : BEGIN OF ty_makt,
          matnr TYPE makt-matnr,
          spras TYPE makt-spras,
          maktx TYPE makt-maktx,
        END OF ty_makt.


TYPES ty_t_makt TYPE STANDARD TABLE OF ty_makt.
DATA :st_makt TYPE ty_makt.
DATA it_makt TYPE STANDARD TABLE OF ty_makt.

DATA : v_matnr TYPE makt-matnr,
       v_spras TYPE makt-spras,
       v_maktx TYPE makt-maktx.


v_matnr = '000000000000000056'.
v_spras = 'E'.

*PERFORM display IN PROGRAM Zprocessing_blocks."external subroutines
"internal Subroutine
*PERFORM get_data USING v_matnr v_spras CHANGING v_maktx st_makt it_makt."actual parameters
PERFORM data_display USING v_matnr v_spras CHANGING v_maktx st_makt it_makt.

*write 'Subroutine called'.
*WRITE / v_maktx.
*&---------------------------------------------------------------------*
*& Form get_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*



** Pass by reference "change original data
*FORM get_data using p_v_matnr TYPE makt-matnr "formal parameters
*                    p_v_spras TYPE makt-spras
*            CHANGING p_v_maktx TYPE makt-maktx.
*select single maktx from makt into p_v_maktx where matnr eq p_v_matnr and spras eq p_v_spras.
*ENDFORM.



** Pass by value "val
*FORM get_data USING VALUE(p_v_matnr) TYPE makt-matnr
*                    VALUE(p_v_spras) TYPE makt-spras
*                    CHANGING p_v_maktx TYPE makt-maktx.
*  select single maktx from makt into p_v_maktx where matnr eq p_v_matnr and spras eq p_v_spras.
*  ENDFORM.





* Pass by value and result "value change when exit the subroutine
*FORM get_data USING VALUE(p_v_matnr) TYPE makt-matnr
*                    VALUE(p_v_spras) TYPE makt-spras
*              CHANGING VALUE(p_v_maktx) TYPE makt-maktx
*                         p_st_makt TYPE ty_makt
*                         p_it_makt TYPE ty_t_makt.
*  SELECT SINGLE maktx FROM makt INTO p_v_maktx WHERE matnr EQ p_v_matnr AND spras EQ p_v_spras.
*  SELECT SINGLE matnr spras maktx FROM makt INTO p_st_makt WHERE matnr EQ p_v_matnr.
*  SELECT  matnr spras maktx FROM makt INTO TABLE p_it_makt WHERE matnr EQ p_v_matnr.
*  WRITE p_st_makt-matnr.
*  p_v_spras = 'D'.
*ENDFORM.
*&---------------------------------------------------------------------*
*& Form data_display
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> V_MATNR
*&      --> V_SPRAS
*&      <-- V_MAKTX
*&      <-- ST_MAKT
*&      <-- IT_MAKT
*&---------------------------------------------------------------------*
FORM data_display  USING VALUE(p_v_matnr) TYPE makt-matnr
                         VALUE(p_v_spras) TYPE makt-spras
                CHANGING VALUE(p_v_maktx) TYPE makt-maktx
                                p_st_makt TYPE ty_makt
                                p_it_makt TYPE ty_t_makt.

  SELECT SINGLE maktx FROM makt INTO p_v_maktx WHERE matnr EQ p_v_matnr AND spras EQ p_v_spras.
  SELECT SINGLE matnr spras maktx FROM makt INTO p_st_makt WHERE matnr EQ p_v_matnr.
  SELECT matnr spras maktx FROM makt INTO TABLE p_it_makt WHERE matnr EQ p_v_matnr.
  WRITE p_st_makt-matnr.
ENDFORM.