REPORT ZEBIN_LIST_TASK.
TYPES: BEGIN  OF ty_vbap,
  vbeln type vbap-vbeln,
  posnr TYPE vbap-posnr,
  pstyv TYPE vbap-pstyv,
  arktx TYPE vbap-arktx,
  kwmeng TYPE vbap-kwmeng,
  zieme TYPE vbap-zieme,
  netwr TYPE vbap-netwr,
  END  OF ty_vbap.
  TYPES :BEGIN OF ty_vbak,
       vbeln TYPE vbak-vbeln,
       audat TYPE vbak-audat,
       netwr TYPE vbak-netwr,
       kunnr type vbak-kunnr,
END OF ty_vbak.
TYPES : BEGIN OF ty_t006a,
       msehi type t006a-msehi,
       msehl type t006a-msehl,
  END OF ty_t006a.
  TYPES : BEGIN OF ty_kna1 ,
    kunnr type kna1-kunnr,
    name1 type kna1-name1,
    END OF ty_kna1.
  DATA : it_vbap TYPE table of ty_vbap,
        wa_vbap LIKE LINE OF it_vbap,
        it_vbak TYPE table of ty_vbak,
        wa_vbak LIKE LINE OF it_vbak,
        it_t006a TYPE TABLE OF ty_t006a,
        wa_t006a like line of it_t006a,

        it_kna1 TYPE TABLE OF ty_kna1,
        wa_kna1 LIKE LINE OF it_kna1,
        prevbeln TYPE vbap-vbeln,
        sum_order type vbap-kwmeng,
        sum_net type   vbap-netwr.


TYPES: BEGIN OF ty_header,
         vbeln TYPE vbak-vbeln,
         audat TYPE vbak-audat,
         netwr TYPE vbak-netwr,
         kunnr TYPE vbak-kunnr,
         name1 TYPE kna1-name1,
       END OF ty_header.

DATA: it_header TYPE TABLE OF ty_header,
      wa_header LIKE LINE OF it_header.
TYPES: BEGIN OF ty_item,
         vbeln type vbap-vbeln,
  posnr TYPE vbap-posnr,
  pstyv TYPE vbap-pstyv,
  arktx TYPE vbap-arktx,
  kwmeng TYPE vbap-kwmeng,
  msehl TYPE t006a-msehl,
  netwr TYPE vbap-netwr,
       END OF ty_item.
       DATA : it_item TYPE TABLE OF ty_item,
             wa_item LIKE LINE OF it_item.
TYPES : ty_it_vbak TYPE STANDARD TABLE OF ty_vbak,
ty_it_kna1 TYPE STANDARD TABLE OF ty_kna1,
ty_it_vbap TYPE STANDARD TABLE OF ty_vbap,
ty_it_t006a TYPE STANDARD TABLE OF ty_t006a.
SELECT-OPTIONS s_num FOR wa_vbak-vbeln.

 START-OF-SELECTION.

* PERFORM header USING s_num CHANGING it_vbak it_kna1.
* PERFORM header IN PROGRAM ZEBIN_SUBROUTINE_TASK USING s_num[] CHANGING it_vbak it_kna1.
PERFORM header IN PROGRAM ZEBIN_SUBROUTINE_TASK USING s_num[] CHANGING it_header.
END-OF-SELECTION.

  LOOP AT it_header INTO wa_header.
  AT FIRST.
    WRITE :/20 'Document Number',
           40 'Doc Date',
           61 'Net Val',
           90 'Sold To Party'.
    ENDAT.

  WRITE : /20 wa_header-vbeln,
          40 wa_header-audat,
          51 wa_header-netwr,
         90 wa_header-name1.
ENDLOOP.
AT LINE-SELECTION.

DATA : fnam(20),fval(50).
DATA v_vbeln TYPE vbap-vbeln.
GET CURSOR FIELD fnam VALUE fval.
fnam = wa_vbak-vbeln.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
  EXPORTING
    input        = fval
 IMPORTING
   OUTPUT        = v_vbeln.
*PERFORM items USING v_vbeln CHANGING it_vbap it_t006a.
CLEAR it_item.
PERFORM items IN PROGRAM ZEBIN_SUBROUTINE_TASK USING v_vbeln CHANGING it_item.

  LOOP AT it_item into wa_item.
  AT FIRST.
  WRITE :/ 'Item',
       20 'Material',
       35 'ItemDesc',
60 'Order Qty' ,
 80 'UoM',
 100'NetVal'.
  ENDAT.

   WRITE : /
    wa_item-posnr,
            20 wa_item-pstyv,
            35  wa_item-arktx,
            50 wa_item-kwmeng,
            80 wa_item-msehl,
            90 wa_item-netwr.


   ENDLOOP.

*==================using global value===================
*DATA :it_vbap  TYPE z1_vbap,
*      wa_vbap  LIKE LINE OF it_vbap,
**      it_vbak type z1_vbak,
**      wa_vbak like line of it_vbak,
**      it_kna1 type z1_kna1,
**      wa_kna1 like line of it_kna1,
*      it_t006a TYPE z1_t006a,
*      wa_t006a LIKE LINE OF it_t006a.
*DATA :it_header TYPE z_header,
*      wa_header LIKE LINE OF it_header,
*      it_item   TYPE z_item,
*      wa_item   LIKE LINE OF it_item.
*DATA prevbeln TYPE vbap-vbeln.
*
*SELECT-OPTIONS s_num FOR wa_header-vbeln.
*
*START-OF-SELECTION.
*
*  PERFORM display IN PROGRAM ZEBIN_SUBROUTINE_TASK USING s_num[] CHANGING it_header.
*  PERFORM display_header.
*
*END-OF-SELECTION.
*
*AT LINE-SELECTION.
*  DATA : fnam(20),fval(50).
*  DATA v_vbeln TYPE vbap-vbeln.
*  GET CURSOR FIELD fnam VALUE fval.
*  PERFORM conversion.
*
*  PERFORM itemdetails IN PROGRAM zsub_prog USING v_vbeln CHANGING it_item.
*  PERFORM display_item.
*
**&---------------------------------------------------------------------*
**& Form display_header
**&---------------------------------------------------------------------*
**& text
**&---------------------------------------------------------------------*
**& -->  p1        text
**& <--  p2        text
**&---------------------------------------------------------------------*
*FORM display_header .
*  LOOP AT it_header INTO wa_header.
*    WRITE : / wa_header-vbeln,
*              wa_header-audat,
*              wa_header-netwr LEFT-JUSTIFIED,
*              wa_header-name1.
*  ENDLOOP.
*
*ENDFORM.
**&---------------------------------------------------------------------*
**& Form conversion
**&---------------------------------------------------------------------*
**& text
**&---------------------------------------------------------------------*
**& -->  p1        text
**& <--  p2        text
**&---------------------------------------------------------------------*
*FORM conversion .
*  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*    EXPORTING
*      input  = fval
*    IMPORTING
*      output = v_vbeln.
*
*ENDFORM.
**&---------------------------------------------------------------------*
**& Form display_item
**&---------------------------------------------------------------------*
**& text
**&---------------------------------------------------------------------*
**& -->  p1        text
**& <--  p2        text
**&---------------------------------------------------------------------*
*FORM display_item .
*  LOOP AT it_item INTO wa_item.
*
*    AT FIRST.
*      WRITE :/ 'Item',
*           20 'Material',
*           35 'ItemDesc',
*    60 'Order Qty' ,
*     80 'UoM',
*     100'NetVal'.
*    ENDAT.
*    WRITE : / wa_item-posnr,
*             20 wa_item-pstyv,
*             35  wa_item-arktx,
*             50 wa_item-kwmeng,
*             80 wa_item-msehi,
*             90 wa_item-netwr.
*
*  ENDLOOP.
*ENDFORM.